<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iybook.statistics.dao.StatisticsMapper">

    <!-- 일별 통계 -->
    <select id="selectDailyStatistics" parameterType="StatisticsRequestDto" resultType="StatisticsSalesDto">
      SELECT
        DATE_FORMAT(o.created_at, '%Y-%m-%d') AS statisticsDate,
        SUM(od.order_detail_total_price) AS totalSales,
        COUNT(CASE WHEN o.order_status = '배송완료' THEN 1 END) AS orderCount,
        COUNT(CASE WHEN o.order_status = '취소완료' THEN 1 END) AS cancelCount
      FROM tbl_order o
        JOIN tbl_order_detail od ON o.order_id = od.order_id
      WHERE (o.created_at) BETWEEN #{startDate} AND #{endDate}
      GROUP BY statisticsDate
      ORDER BY statisticsDate
    </select>

    <!-- 월별 통계 -->
    <select id="selectMonthlyStatistics" parameterType="StatisticsRequestDto" resultType="StatisticsSalesDto">
      SELECT
        DATE_FORMAT(o.created_at, '%Y-%m') AS statisticsDate,
        SUM(od.order_detail_total_price) AS totalSales,
        COUNT(CASE WHEN o.order_status = '배송완료' THEN 1 END) AS orderCount,
        COUNT(CASE WHEN o.order_status = '취소요청' THEN 1 END) AS cancelCount
      FROM tbl_order o
        JOIN tbl_order_detail od ON o.order_id = od.order_id
      WHERE (o.created_at) BETWEEN #{startDate} AND #{endDate}
      GROUP BY statisticsDate
      ORDER BY statisticsDate
    </select>

    <!-- 연별 통계 -->
    <select id="selectYearlyStatistics" parameterType="StatisticsRequestDto" resultType="StatisticsSalesDto">
      SELECT
        DATE_FORMAT(o.created_at, '%Y') AS statisticsDate,
        SUM(od.order_detail_total_price) AS totalSales,
        COUNT(CASE WHEN o.order_status = '배송완료' THEN 1 END) AS orderCount,
        COUNT(CASE WHEN o.order_status = '취소완료' THEN 1 END) AS cancelCount
      FROM tbl_order o
        JOIN tbl_order_detail od ON o.order_id = od.order_id
      WHERE (o.created_at) BETWEEN #{startDate} AND #{endDate}
      GROUP BY statisticsDate
      ORDER BY statisticsDate
    </select>


    <!-- 카테고리 통계 -->

    <!-- 전체 고객 -->
  <select id="selectCategoryAllStatistics" resultType="StatisticsCategoryDto"
          parameterType="StatisticsRequestDto">
    SELECT
    c.category_name AS categoryName,
    SUM(od.order_detail_total_count) AS orderCount
    FROM tbl_order_detail od
    JOIN tbl_order o ON od.order_id = o.order_id
    JOIN tbl_book b ON od.book_id = b.book_id
    JOIN tbl_category c ON b.category_id = c.category_id
    WHERE o.order_status = '배송완료'
    AND DATE_FORMAT(o.created_at, '%Y-%m') BETWEEN #{startDate} AND #{endDate}
    GROUP BY c.category_name
    ORDER BY orderCount DESC;
  </select>

    <!-- 성별 기준 -->
  <select id="selectCategoryGenderStatistics" resultType="StatisticsCategoryDto"
          parameterType="StatisticsRequestDto">

    SELECT
    SUM(od.order_detail_total_count) AS orderCount,
      c.category_name AS categoryName,
      cu.customer_gender AS gender
    FROM tbl_order_detail od
      JOIN tbl_order o ON od.order_id = o.order_id
      JOIN tbl_book b ON od.book_id = b.book_id
      JOIN tbl_category c ON b.category_id = c.category_id
      JOIN tbl_customer cu ON o.customer_id = cu.customer_id
    WHERE DATE_FORMAT(o.created_at, '%Y-%m') BETWEEN #{startDate} AND #{endDate}
      AND o.order_status = '배송완료'
    GROUP BY c.category_name, cu.customer_gender
    ORDER BY cu.customer_gender, orderCount DESC
  </select>

  <!-- 나이대 기준 -->
  <select id="selectCategoryAgeStatistics" resultType="StatisticsCategoryDto"
          parameterType="StatisticsRequestDto">

    SELECT
      SUM(od.order_detail_total_count) AS orderCount,
      c.category_name AS categoryName,
    CASE
      WHEN cu.customer_age BETWEEN 10 AND 19 THEN '10대'
      WHEN cu.customer_age BETWEEN 20 AND 29 THEN '20대'
      WHEN cu.customer_age BETWEEN 30 AND 39 THEN '30대'
      WHEN cu.customer_age BETWEEN 40 AND 49 THEN '40대'
      WHEN cu.customer_age >= 50 THEN '50대 이상'
      ELSE '기타'
      END AS ageGroup
    FROM tbl_order_detail od
      JOIN tbl_order o ON od.order_id = o.order_id
      JOIN tbl_book b ON od.book_id = b.book_id
      JOIN tbl_category c ON b.category_id = c.category_id
      JOIN tbl_customer cu ON o.customer_id = cu.customer_id
    WHERE DATE_FORMAT(o.created_at, '%Y-%m') BETWEEN #{startDate} AND #{endDate}
      AND o.order_status = '배송완료'
    GROUP BY c.category_name, ageGroup
    ORDER BY ageGroup, orderCount DESC
  </select>

  </mapper>
