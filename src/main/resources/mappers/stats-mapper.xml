<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iybook.statistics.dao.StatisticsMapper">

    <!-- 일별 통계 -->
    <select id="selectDailyStatistics" resultType="StatisticsSalesDto">
      SELECT
        DATE_FORMAT(o.created_at, '%Y-%m-%d') AS statisticsDate,
        SUM(od.order_detail_total_price) AS totalSales,
        COUNT(CASE WHEN o.order_status = '주문완료' THEN 1 END) AS orderCount,
        COUNT(CASE WHEN o.order_status = '취소완료' THEN 1 END) AS cancelCount
      FROM tbl_order o
        JOIN tbl_order_detail od ON o.order_id = od.order_id
      WHERE (o.created_at) BETWEEN #{startDate} AND #{endDate}
      GROUP BY statisticsDate
      ORDER BY statisticsDate
    </select>

    <!-- 월별 통계 -->
    <select id="selectMonthlyStatistics" resultType="StatisticsSalesDto">
      SELECT
        DATE_FORMAT(o.created_at, '%Y-%m') AS statisticsDate,
        SUM(od.order_detail_total_price) AS totalSales,
        COUNT(CASE WHEN o.order_status = '주문완료' THEN 1 END) AS orderCount,
        COUNT(CASE WHEN o.order_status = '취소요청' THEN 1 END) AS cancelCount
      FROM tbl_order o
        JOIN tbl_order_detail od ON o.order_id = od.order_id
      WHERE (o.created_at) BETWEEN #{startDate} AND #{endDate}
      GROUP BY statisticsDate
      ORDER BY statisticsDate
    </select>

    <!-- 연별 통계 -->
    <select id="selectYearlyStatistics" resultType="StatisticsSalesDto">
      SELECT
        DATE_FORMAT(o.created_at, '%Y') AS statisticsDate,
        SUM(od.order_detail_total_price) AS totalSales,
        COUNT(CASE WHEN o.order_status = '주문완료' THEN 1 END) AS orderCount,
        COUNT(CASE WHEN o.order_status = '취소완료' THEN 1 END) AS cancelCount
      FROM tbl_order o
        JOIN tbl_order_detail od ON o.order_id = od.order_id
      WHERE (o.created_at) BETWEEN #{startDate} AND #{endDate}
      GROUP BY statisticsDate
      ORDER BY statisticsDate
    </select>

    <!-- 카테고리 통계 -->

    <!-- 전체 고객 -->
    <select id="selectCategoryAllStatistics" resultType="StatisticsCategoryDto"
      parameterType="StatisticsRequestDto">

      SELECT
        c.categroy_name AS categoryName,
        COUNT(*) AS orderCount
      FROM tbl_order o
        JOIN tbl_order_detail od ON o.order_id = od.order_id
        JOIN tbl_book b ON od.book_id = b.book_id
        JOIN tbl_category c ON b.category_id = c.category_id
      WHERE o.created_at BETWEEN #{startDate} AND #{endDate}
      GROUP BY c.categroy_name
      ORDER BY orderCount DESC
    </select>

    <!-- 성별 기준 -->
    <select id="selectCategoryGenderStatistics" resultType="StatisticsCategoryDto"
    parameterType="StatisticsRequestDto">
      SELECT
        cu.customer_gender AS gender,
        c.categroy_name AS categoryName,
        COUNT(*) AS orderCount
      FROM tbl_order o
        JOIN tbl_order_detail od ON o.order_id = od.order_id
        JOIN tbl_book b ON od.book_id = b.book_id
        JOIN tbl_category c ON b.category_id = c.category_id
        JOIN tbl_customer cu ON o.customer_id = cu.customer_id
      WHERE o.created_at BETWEEN #{startDate} AND #{endDate}
      GROUP BY cu.customer_gender, c.categroy_name
      ORDER BY cu.customer_gender, orderCount DESC
    </select>
    <!-- 나이 기준 -->
    <select id="selectCategoryAgeStatistics" resultType="StatisticsCategoryDto"
      parameterType="StatisticsRequestDto">
      SELECT
        CASE
        WHEN cu.customer_age BETWEEN 10 AND 19 THEN '10대'
        WHEN cu.customer_age BETWEEN 20 AND 29 THEN '20대'
        WHEN cu.customer_age BETWEEN 30 AND 39 THEN '30대'
        WHEN cu.customer_age BETWEEN 40 AND 49 THEN '40대'
        ELSE '50대 이상'
      END AS ageGroup,
        c.categroy_name AS categoryName,
        COUNT(*) AS orderCount
      FROM tbl_order o
        JOIN tbl_order_detail od ON o.order_id = od.order_id
        JOIN tbl_book b ON od.book_id = b.book_id
        JOIN tbl_category c ON b.category_id = c.category_id
        JOIN tbl_customer cu ON o.customer_id = cu.customer_id
      WHERE o.created_at BETWEEN #{startDate} AND #{endDate}
      GROUP BY ageGroup, c.categroy_name
      ORDER BY ageGroup, orderCount DESC
    </select>
  </mapper>
